version: 2.1

jobs:
  checkout-code:
    machine:
      image: ubuntu-1604:201903-01
    steps:
      - checkout

      - persist_to_workspace:
          root: .
          paths: .

  vendor:
    docker:
      - image: << parameters.docker_image >>
    parameters:
      docker_image:
        type: string
      service_path:
        type: string
      dependency_file:
        type: string
      dependencies_location:
        type: string
    steps:
      - attach_workspace:
          at: .

      - run:
          name: Check files changed
          command: |
            chmod +x .circleci/check-changed.sh
            if .circleci/check-changed.sh << parameters.service_path >> ${CIRCLE_BRANCH} | grep "NO" ; then circleci step halt; fi

      - restore_cache:
          keys:
            - dependency-cache-{{ checksum "<< parameters.service_path >>/<< parameters.dependency_file >>" }}

      - run:
          name: Install dependencies
          command: |
            cd << parameters.service_path >>
            make vendor

      - save_cache:
          key: dependency-cache-{{ checksum "<< parameters.service_path >>/<< parameters.dependency_file >>" }}
          paths:
            - << parameters.dependencies_location >>

      - persist_to_workspace:
          root: .
          paths: .

  unit:
    docker:
      - image: << parameters.docker_image >>
    parameters:
      docker_image:
        type: string
      service_path:
        type: string
    steps:
      - attach_workspace:
          at: .

      - run:
          name: Check files changed
          command: |
            chmod +x .circleci/check-changed.sh
            if .circleci/check-changed.sh << parameters.service_path >> ${CIRCLE_BRANCH} | grep "NO" ; then circleci step halt; fi

      - run:
          name: Run tests
          command: |
            cd << parameters.service_path >>
            make test-unit

  integration:
    docker:
      - image: << parameters.docker_image >>
      - image: circleci/mongo:3
    parameters:
      docker_image:
        type: string
      service_path:
        type: string
    steps:
      - attach_workspace:
          at: .

      - run:
          name: Check files changed
          command: |
            chmod +x .circleci/check-changed.sh
            if .circleci/check-changed.sh << parameters.service_path >> ${CIRCLE_BRANCH} | grep "NO" ; then circleci step halt; fi

      - run:
          name: Run tests
          command: |
            cd << parameters.service_path >>
            make test-integration

  build:
    docker:
      - image: << parameters.docker_image >>
    parameters:
      docker_image:
        type: string
      service_path:
        type: string
    steps:
      - attach_workspace:
          at: .

      - run:
          name: Build Functions
          command: |
            cd << parameters.service_path >>
            make -B build

      - persist_to_workspace:
          root: .
          paths: .

  deploy:
    docker:
      - image: circleci/node:latest
      - image: circleci/python:3.7.7
    steps:
      - attach_workspace:
          at: .

      - run:
          name: Create secrets file
          command: |
            JSON='{
              "mongoUri":"%s",
              "token":"%s",
              "coinbaseApiKey":"%s",
              "coinbaseSecretKey":"%s",
              "coinbaseProApiKey":"%s",
              "coinbaseProPassphrase":"%s",
              "coinbaseProSecretKey":"%s",
              "coinbaseProSandboxApiKey":"%s",
              "coinbaseProSandboxPassphrase":"%s",
              "coinbaseProSandboxSecretKey":"%s",
              "awsAccountId": "%s",
              "lumigoToken": "%s",
              "sendGridApiKey": "%s"
            }\n'
            printf "$JSON" \
            "${MONGO_URI}" \
            "${TOKEN}" \
            "${COINBASE_API_KEY}" "${COINBASE_SECRET_KEY}" \
            "${COINBASE_PRO_KEY}" "${COINBASE_PRO_PASSPHRASE}" "${COINBASE_PRO_SECRET}" \
            "${COINBASE_PRO_SANDBOX_KEY}" "${COINBASE_PRO_SANDBOX_PASSPHRASE}" "${COINBASE_PRO_SANDBOX_SECRET}" \
            "${AWS_ACCOUNT_ID}" "${LUMIGO_TOKEN}" "${SEND_GRID_API_KEY}" > secrets.json

      - run:
          name: Install pip
          command: |
            sudo apt update
            sudo apt install python3-pip
            sudo pip3 install --upgrade pip

      - run:
          name: Install Serverless CLI, Configure Profile, Deploy
          command: |
            sudo npm i -g serverless
            npm install
            serverless config credentials --provider aws --key ${AWS_ACCESS_KEY} --secret ${AWS_SECRET_KEY} --profile kripto
            serverless deploy
workflows:
  version: 2.1
#  shared-go-lambda:
#    jobs:
#      - checkout-code
#      - vendor:
#          docker_image: cimg/go:1.14
#          service_path: shared/go/lambda
#          dependency_file: go.sum
#          dependencies_location: /go/pkg/mod
#          requires:
#            - checkout-code
#      - unit:
#          docker_image: cimg/go:1.14
#          service_path: shared/go/lambda
#          requires:
#            - vendor
#      - integration:
#          docker_image: cimg/go:1.14
#          service_path: shared/go/lambda
#          requires:
#            - vendor
#  shared-go-log:
#    jobs:
#      - checkout-code
#      - vendor:
#          docker_image: cimg/go:1.14
#          service_path: shared/go/log
#          dependency_file: go.sum
#          dependencies_location: /go/pkg/mod
#          requires:
#            - checkout-code
#      - unit:
#          docker_image: cimg/go:1.14
#          service_path: shared/go/log
#          requires:
#            - vendor
#      - integration:
#          docker_image: cimg/go:1.14
#          service_path: shared/go/log
#          requires:
#            - vendor
#  shared-go-mongodb:
#    jobs:
#      - checkout-code
#      - vendor:
#          docker_image: cimg/go:1.14
#          service_path: shared/go/mongodb
#          dependency_file: go.sum
#          dependencies_location: /go/pkg/mod
#          requires:
#            - checkout-code
#      - unit:
#          docker_image: cimg/go:1.14
#          service_path: shared/go/mongodb
#          requires:
#            - vendor
#      - integration:
#          docker_image: cimg/go:1.14
#          service_path: shared/go/mongodb
#          requires:
#            - vendor
#  shared-go-idempotency:
#    jobs:
#      - checkout-code
#      - vendor:
#          docker_image: cimg/go:1.14
#          service_path: shared/go/idempotency
#          dependency_file: go.sum
#          dependencies_location: /go/pkg/mod
#          requires:
#            - checkout-code
#      - unit:
#          docker_image: cimg/go:1.14
#          service_path: shared/go/idempotency
#          requires:
#            - vendor
#      - integration:
#          docker_image: cimg/go:1.14
#          service_path: shared/go/idempotency
#          requires:
#            - vendor
#  data-storer:
#    jobs:
#      - checkout-code
#      - vendor:
#          docker_image: cimg/go:1.14
#          service_path: services/data-storer
#          dependency_file: go.sum
#          dependencies_location: /go/pkg/mod
#          requires:
#            - checkout-code
#      - unit:
#          docker_image: cimg/go:1.14
#          service_path: services/data-storer
#          requires:
#            - vendor
#      - integration:
#          docker_image: cimg/go:1.14
#          service_path: services/data-storer
#          requires:
#            - vendor
#  trader:
#    jobs:
#      - checkout-code
#      - vendor:
#          docker_image: cimg/go:1.14
#          service_path: services/trader
#          dependency_file: go.sum
#          dependencies_location: /go/pkg/mod
#          requires:
#            - checkout-code
#      - unit:
#          docker_image: cimg/go:1.14
#          service_path: services/trader
#          requires:
#            - vendor
#      - integration:
#          docker_image: cimg/go:1.14
#          service_path: services/trader
#          requires:
#            - vendor
#  shared-java-idempotency:
#    jobs:
#      - checkout-code
#      - unit:
#          docker_image: cimg/openjdk:11.0
#          service_path: shared/java/idempotency
#          requires:
#            - checkout-code
#      - integration:
#          docker_image: cimg/openjdk:11.0
#          service_path: shared/java/idempotency
#          requires:
#            - checkout-code
#  receipt-emailer:
#    jobs:
#      - checkout-code
#      - build:
#          name: build-java-idempotency
#          docker_image: cimg/openjdk:11.0
#          service_path: shared/java/idempotency
#          requires:
#            - checkout-code
#      - unit:
#          docker_image: cimg/openjdk:11.0
#          service_path: services/receipt-emailer
#          requires:
#            - build-java-idempotency
#      - integration:
#          docker_image: cimg/openjdk:11.0
#          service_path: services/receipt-emailer
#          requires:
#            - build-java-idempotency
  deploy-functions:
    jobs:
      - checkout-code:
          filters:
            branches:
              only:
                - master
      - build:
          name: build-data-storer
          docker_image: cimg/go:1.14
          service_path: services/data-storer
          requires:
            - checkout-code
          filters:
            branches:
              only:
                - master
      - build:
          name: build-trader
          docker_image: cimg/go:1.14
          service_path: services/trader
          requires:
            - build-data-storer
          filters:
            branches:
              only:
                - master
      - build:
          name: build-rate-retriever
          docker_image: circleci/node:8.10
          service_path: services/rate-retriever
          requires:
            - build-trader
          filters:
            branches:
              only:
                - master
      - build:
          name: build-java-idempotency
          docker_image: cimg/openjdk:11.0
          service_path: shared/java/idempotency
          requires:
            - build-rate-retriever
          filters:
            branches:
              only:
                - master
      - build:
          name: build-receipt-emailer
          docker_image: cimg/openjdk:11.0
          service_path: services/receipt-emailer
          requires:
            - build-java-idempotency
          filters:
            branches:
              only:
                - master
      - deploy:
          requires:
            - build-receipt-emailer
          filters:
            branches:
              only:
                - master